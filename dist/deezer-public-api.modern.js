import{request as r}from"undici";import*as t from"node:http";class i{constructor(r){this.api=void 0,this.api=r}all({query:r,order:t,limit:i,index:e,strict:s}){let a;return a="object"==typeof r?Object.entries(r).map(([r,t])=>`${r}:"${t}"`).join(""):r,this.api.request({uri:"search",query:a,strict:s,order:t,index:e,limit:i})}album({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/album",query:r,strict:s,order:t,index:e,limit:i})}artist({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/artist",query:r,strict:s,order:t,index:e,limit:i})}playlist({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/playlist",query:r,strict:s,order:t,index:e,limit:i})}podcast({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/podcast",query:r,strict:s,order:t,index:e,limit:i})}radio({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/radio",query:r,strict:s,order:t,index:e,limit:i})}track({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/track",query:r,strict:s,order:t,index:e,limit:i})}user({query:r,order:t,limit:i,index:e,strict:s}){return this.api.request({uri:"search/user",query:r,strict:s,order:t,index:e,limit:i})}}class e{constructor(r){this.api=void 0,this.api=r}get({id:r}){return this.api.request({uri:`track/${r}`})}}class s{constructor(r){this.api=void 0,this.api=r}get({id:r}){return this.api.request({uri:`album/${r}`})}fans({id:r}){return this.api.request({uri:`album/${r}/fans`})}tracks({id:r}){return this.api.request({uri:`album/${r}/fans`})}}class a{constructor(r){this.api=void 0,this.api=r}get({id:r}){return this.api.request({uri:`artist/${r}`})}top({id:r}){return this.api.request({uri:`artist/${r}/top`})}albums({id:r}){return this.api.request({uri:`albums/${r}/top`})}fans({id:r}){return this.api.request({uri:`artist/${r}/top`})}related({id:r}){return this.api.request({uri:`artist/${r}/top`})}radio({id:r}){return this.api.request({uri:`artist/${r}/top`})}playlist({id:r}){return this.api.request({uri:`artist/${r}/top`})}}function n(){return n=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(r[e]=i[e])}return r},n.apply(this,arguments)}class o{constructor(r){this.api=void 0,this.api=r}setup({appId:r,redirectUri:t,perms:i}){this.api.config=n({},this.api.config,{appId:r,redirectUri:t,perms:"string"==typeof i?[i]:i})}getLoginUrl(){var r;if(!this.api.config.appId||!this.api.config.redirectUri)throw new Error("auth.setup(opts: { appId: string, redirectUri: string, perms?: string | string[] }) should be called before auth.getLoginUrl");const t=new URL("https://connect.deezer.com/oauth/auth.php");return t.searchParams.set("app_id",this.api.config.appId),t.searchParams.set("redirect_uri",this.api.config.redirectUri),t.searchParams.set("perms",(null!=(r=this.api.config.perms)?r:[]).join(",")),t.toString()}waitForLoginCallback(){return new Promise(r=>{if(!this.api.config.appId||!this.api.config.redirectUri)throw new Error("auth.setup(opts: { appId: string, redirectUri: string, perms?: string | string[] }) should be called before auth.getLoginUrl");const i=new URL(this.api.config.redirectUri),e=t.createServer((t,s)=>{var a;const n=new URL(null!=(a=t.url)?a:"/",`http://${t.headers.host}`);n.pathname===i.pathname&&n.searchParams.has("code")&&(r({code:n.searchParams.get("code")}),s.writeHead(200,{"Content-Type":"text/html"}).end('<html><body><div style="display: grid; place-content: center; font-family: sans-serif"><h1>Auth code received</h1><p>You can close this window and get back to your terminal</p></div></body></html>'),e.close(()=>{console.log("closed")}))});e.listen(i.port)})}}class u{constructor(){this.auth=new o(this),this.search=new i(this),this.track=new e(this),this.album=new s(this),this.artist=new a(this),this.deezerApiBaseUrl="https://api.deezer.com/",this.config={}}async request({uri:t,index:i,limit:e,order:s,strict:a,query:n}){const o=new URL(t,this.deezerApiBaseUrl),u=(r,t)=>void 0!==t?o.searchParams.set(r,String(t)):void 0;u("q",n),u("index",i),u("limit",e),u("order",s),u("strict",a?"on":void 0),console.log(o.toString(),{uri:t,index:i,limit:e,order:s,strict:a,query:n});const{body:c}=await r(o);return c.json()}}export{u as default};
//# sourceMappingURL=deezer-public-api.modern.js.map
